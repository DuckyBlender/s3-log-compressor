AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:

  # KMS Key
  KmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: "KMS key for S3 server-side encryption"
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Allow administration of the key'
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: 'Allow S3 to use the key'
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action:
              - 'kms:GenerateDataKey*'
              - 'kms:Decrypt'
            Resource: '*'

  KmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/s3-log-compressor-key
      TargetKeyId: !Ref KmsKey

  # S3 Buckets
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteNoncurrentVersionsRule
            Status: Enabled
            NoncurrentVersionExpirationInDays: 7
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref KmsKey
            BucketKeyEnabled: true

  TargetBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref KmsKey
            BucketKeyEnabled: true

  # Lambda Function
  CompressFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: rust-compressor/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 10240
      MemorySize: 10240
      Timeout: 900
      Environment:
        Variables:
          KMS_KEY_ID: !Ref KmsKey
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SourceBucket
        - S3WritePolicy:
            BucketName: !Ref TargetBucket
        - S3ReadPolicy:
            BucketName: !Ref TargetBucket
        - Statement:
          - Effect: Allow
            Action:
              - "s3:DeleteObject"
              - "s3:DeleteObjectVersion"
            Resource: !Sub "arn:aws:s3:::${SourceBucket}/*"
        - KMSDecryptPolicy:
            KeyId: !Ref KmsKey
        - Statement:
          - Effect: Allow
            Action:
              - "kms:GenerateDataKey"
              - "kms:Decrypt"
            Resource: !GetAtt KmsKey.Arn
      # Layers:
      #   - arn:aws:lambda:eu-central-1:534406734576:layer:zip-zstd-al2023-arm64:1
    Metadata:
      BuildMethod: rust-cargolambda
      BuildInSource: true

  OrchestratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: rust-orchestrator/
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
        - arm64
      MemorySize: 1024
      Timeout: 900
      Environment:
        Variables:
          COMPRESSOR_FUNCTION_ARN: !GetAtt CompressFunction.Arn
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref SourceBucket
        - S3CrudPolicy:
            BucketName: !Ref TargetBucket
        - LambdaInvokePolicy:
            FunctionName: !Ref CompressFunction
    Metadata:
      BuildMethod: rust-cargolambda
      BuildInSource: true